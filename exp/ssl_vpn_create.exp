#!/usr/bin/expect

source "/usr/local/2nd_tools/lib/env.exp"

log_user 1
set server [lindex $argv 0]
set region [lindex $argv 1]

proc createUser{} {
	global base_dir
set fhandle [open "$base_dir/tmp/ssl_vpn.list" "r"]
	send -- "admin\r"
	expect "# "
	send -- "terminal pager disable\r"
	expect "# "
	send -- "configure\r"
	expect "have already existed in configure mode" {
		send -- "exit\n"
		expect "> "
		send -- "exit\n"
		expect -re $prompt
		send -- "exit\n"
		expect eof
		exit 127
	} "# "
	send -- "load running-config\r"
	expect "# "
while {[gets $fhandle line] >= 0} {
set user [lindex [split $line ,] 0]
set pass [lindex [split $line ,] 1]
	send -- "user $user\r"
	expect "# "
	send -- "password $pass\r"
	expect "# "
	send -- "password-next-login enable\r"
	expect "# "
	send -- "client-ip-pool ssl-vpn\r"
	expect "# "
	send -- "user-group Mainte\r"
	expect "# "
	send -- "match user $user\r"
	expect "# "
	send -- "exit\r"
	expect "# "
}
close $fhandle
	set timeout -1
	send -- "commit force\r"
	expect "Do you overwrite \"running-config\" by the current"
	send -- "y\r"
	expect "Does it save also at \"startup-config\""
	send -- "y\r"
	expect "# "
	set timeout 60
	send -- "end\r"
	expect "# "
	send -- "sync cluster\r"
	expect -re ".*?\n"
	expect -re ".*? \\\((....)/(..)/(..)\\\(...\\\)(..):(..):(..)\\\) -> .*?\\\((....)/(..)/(..)\\\(...\\\)(..):(..):(..)\\\)\r\n"
	set year1 $expect_out(1,string)
	set month1 $expect_out(2,string)
	set day1 $expect_out(3,string)
	set hour1 $expect_out(4,string)
	set min1 $expect_out(5,string)
	set sec1 $expect_out(6,string)
	set year2 $expect_out(7,string)
	set month2 $expect_out(8,string)
	set day2 $expect_out(9,string)
	set hour2 $expect_out(10,string)
	set min2 $expect_out(11,string)
	set sec2 $expect_out(12,string)
	expect "Are you sure?"
	if { "$year1$month1$day1$hour1$min1$sec1" > "$year2$month2$day2$hour2$min2$sec2" } {
		send -- "y\r"
		expect "The synchronization was completed"
	} else {
		send -- "n\r"
		expect "Operation is aborted by user"
	}
	expect "# "
}

proc connect_ipcom {server region} {

send -- "ssh -l admin $server\n"
expect "password" {
	send -- "nt%$region\r"
} "yes/no" {
	send -- "yes\r"
	expect "password"
	send -- "nt%$region\r"
} timeout {
	exit 1
}

return 0
}

	

spawn /bin/bash --norc
expect -re $prompt
connect_ipcom $server $region
expect "> "

createUser

send -- "exit\r"
expect "> "
send -- "exit\r"

expect -re $prompt
send -- "exit\n"
expect eof
log_user 1
exit 0
